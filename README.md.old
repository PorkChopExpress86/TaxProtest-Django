# TaxProtest-Django

## Standard Development Workflow (Docker Compose)

### 1. Environment Setup

Copy `.env.example` to `.env` and set a strong `DJANGO_SECRET_KEY` (generate one with:
```bash
python3 -c "import secrets; print(secrets.token_urlsafe(64))"
```
)

### 2. Start All Services (Recommended)

Run the following to start Postgres, Redis, and Django together:
```bash
docker compose up --build
```

This will automatically run migrations and start the Django server at `http://localhost:8000`. The `.env` file will be loaded by default.

### 3. (Optional) Run Celery Worker
To run a Celery worker, uncomment the `worker` service in `docker-compose.yml` and run:
```bash
docker compose up worker
```

### 4. Manual Python Workflow (Advanced)
You can still use a virtualenv and run commands manually, but Docker Compose is the default and recommended method for all environments.

---
## Security Note

The framework secret key is no longer committed to the repository. Ensure you rotate any previously deployed key since it was present in history.

The project uses a top-level `templates/` directory and a minimal `data` app with a sample Celery task at `data/tasks.py`.